add_trace(y = ~gac.runtime2, name = 'model2 GAC', line = list(color = 'rgba(0,255,0,0.2)', width = 2)) %>%
add_trace(y = ~gac.runtime3, name = 'model3 GAC', line = list(color = 'rgba(0,0,255,0.2)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)", type = "log"))
p
# board size x runtime, for GAC, for 3 value orderings
plot = read.csv('~/Downloads/battleship/results/basic_board_runtime_val_ord.csv')
p = plot_ly(plot, x = ~board.size, y = ~runtime_dec, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~runtime_inc, name = 'GAC val_increasing', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~runtime_dec_lcv, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
p
plot = read.csv('~/Downloads/battleship/results/advanced_board_runtime.csv')
plot = na.omit(plot)
p = plot_ly(plot, x = ~board.size, y = ~bt.runtime1, name = 'model1 BT', type = 'scatter', mode = 'lines', line = list(color = '#3F51B5', width = 2))%>%
add_trace(y = ~fc.runtime1, name = 'model1 FC', line = list(color = '#2196F3', width = 2)) %>%
add_trace(y = ~gac.runtime1, name = 'model1 GAC', line = list(color = '#B3E5FC', width = 2)) %>%
layout(title = "Propagators Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)", type = "log"))
p
p = plot_ly(plot, x = ~board.size, y = ~bt.assignment1, name = 'model1 BT assignments', type = 'scatter', mode = 'lines', line = list(color = '#B71C1C', width = 2))%>%
add_trace(y = ~fc.assignment1, name = 'model1 FC assignments', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~fc.pruning1, name = 'model1 FC prunings', line = list(color = '#1B5E20', width = 2)) %>%
add_trace(y = ~gac.assignment1, name = 'model1 GAC assignments', line = list(color = '#2196F3', width = 2)) %>%
add_trace(y = ~gac.pruning1, name = 'model1 GAC prunings', line = list(color = '#1A237E', width = 2)) %>%
layout(title = "Assignments/Prunings Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Assignments/Prunings", type = "log"))
p
# board size x runtime, for 3 models
plot = read.csv('~/Downloads/battleship/results/basic_board_runtime_model.csv')
p = plot_ly(plot, x = ~board.size, y = ~bt.runtime1, name = 'model1 BT', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~bt.runtime2, name = 'model2 BT', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~bt.runtime3, name = 'model3 BT', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
add_trace(y = ~fc.runtime1, name = 'model1 FC', line = list(color = 'rgba(255,0,0,0.6)', width = 2)) %>%
add_trace(y = ~fc.runtime2, name = 'model2 FC', line = list(color = 'rgba(0,255,0,0.6)', width = 2)) %>%
add_trace(y = ~fc.runtime3, name = 'model3 FC', line = list(color = 'rgba(0,0,255,0.6)', width = 2)) %>%
add_trace(y = ~gac.runtime1, name = 'model1 GAC', line = list(color = 'rgba(255,0,0,0.2)', width = 2)) %>%
add_trace(y = ~gac.runtime2, name = 'model2 GAC', line = list(color = 'rgba(0,255,0,0.2)', width = 2)) %>%
add_trace(y = ~gac.runtime3, name = 'model3 GAC', line = list(color = 'rgba(0,0,255,0.2)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)", type = "log"))
p
setwd('~/Downloads/battleship/data_visualization')
# basic
basic_model1 = read.csv('../results/basic_test_model1.csv')
b_model1_BT = subset(basic_model1, `propagation.type` == 'BT')
b_model1_FC = subset(basic_model1, `propagation.type` == 'FC')
b_model1_GAC = subset(basic_model1, `propagation.type` == 'GAC')
b_model1_BT_aggr = aggregate(b_model1_BT[, 7:9], list(b_model1_BT$`board.size`), mean)
b_model1_FC_aggr = aggregate(b_model1_FC[, 7:9], list(b_model1_FC$`board.size`), mean)
b_model1_GAC_aggr = aggregate(b_model1_GAC[, 7:9], list(b_model1_GAC$`board.size`), mean)
# advanced 5x5 10x10
adv_model1 = read.csv('../results/advanced_test_model1_BT_FT_GAC.csv')
a_model1_BT = subset(adv_model1, `propagation.type` == 'BT')
a_model1_FC = subset(adv_model1, `propagation.type` == 'FC')
a_model1_BT_aggr = aggregate(a_model1_BT[, 7:9], list(a_model1_BT$`board.size`), mean)
a_model1_FC_aggr = aggregate(a_model1_FC[, 7:9], list(a_model1_FC$`board.size`), mean)
# advanced 5x5 ~ 10x10
adv_gac_model1 = read.csv('../results/advanced_test_model1_GAC_only.csv')
a_model1_GAC = subset(adv_gac_model1, `propagation.type` == 'GAC')
a_model1_GAC_aggr = aggregate(a_model1_GAC[, 7:9], list(a_model1_GAC$`board.size`), mean)
colnames(a_model1_GAC_aggr) = c('board.size',
'gac.runtime1',
'gac.assignment1',
'gac.pruning1')
# data - board size x runtime, for model 1, for 3 propagation types
basic = cbind(b_model1_BT_aggr,
b_model1_FC_aggr[2:4])
colnames(basic) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
advanced = cbind(a_model1_BT_aggr,
a_model1_FC_aggr[2:4])
colnames(advanced) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr, by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime_assignment_pruning.csv')
# data - board size x runtime/assignment/pruning, for 3 models, for 3 propagation types
basic = cbind(b_model1_BT_aggr[1:2],
b_model1_FC_aggr[2])
colnames(basic) = c('board.size',
'bt.runtime1',
'fc.runtime1')
advanced = cbind(a_model1_BT_aggr[1:2],
a_model1_FC_aggr[2])
colnames(advanced) = c('board.size',
'bt.runtime1',
'fc.runtime1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr[1:2], by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime.csv')
setwd('~/Downloads/battleship/data_visualization')
# model 1
basic_model1 = read.csv('../results/basic_test_model1.csv')
b_model1_BT = subset(basic_model1, `propagation.type` == 'BT')
b_model1_FC = subset(basic_model1, `propagation.type` == 'FC')
b_model1_GAC = subset(basic_model1, `propagation.type` == 'GAC')
b_model1_BT_aggr = aggregate(b_model1_BT[, 7:9], list(b_model1_BT$`board.size`), mean)
b_model1_FC_aggr = aggregate(b_model1_FC[, 7:9], list(b_model1_FC$`board.size`), mean)
b_model1_GAC_aggr = aggregate(b_model1_GAC[, 7:9], list(b_model1_GAC$`board.size`), mean)
b_model1_GAC_val_dec = subset(b_model1_GAC, `value.ordering.type` == 'val_decreasing_order')
b_model1_GAC_val_dec_aggr = aggregate(b_model1_GAC_val_dec[, 7:9], list(b_model1_GAC_val_dec$`board.size`), mean)
b_model1_GAC_val_inc = subset(b_model1_GAC, `value.ordering.type` == 'val_increasing_order')
b_model1_GAC_val_inc_aggr = aggregate(b_model1_GAC_val_inc[, 7:9], list(b_model1_GAC_val_inc$`board.size`), mean)
b_model1_GAC_val_dec_lcv = subset(b_model1_GAC, `value.ordering.type` == 'val_decrease_lcv')
b_model1_GAC_val_dec_lcv_aggr = aggregate(b_model1_GAC_val_dec_lcv[, 7:9], list(b_model1_GAC_val_dec_lcv$`board.size`), mean)
# model 2
basic_model2 = read.csv('../results/basic_test_model2.csv')
b_model2_BT = subset(basic_model2, `propagation.type` == 'BT')
b_model2_FC = subset(basic_model2, `propagation.type` == 'FC')
b_model2_GAC = subset(basic_model2, `propagation.type` == 'GAC')
b_model2_BT_aggr = aggregate(b_model2_BT[, 7:9], list(b_model2_BT$`board.size`), mean)
b_model2_FC_aggr = aggregate(b_model2_FC[, 7:9], list(b_model2_FC$`board.size`), mean)
b_model2_GAC_aggr = aggregate(b_model2_GAC[, 7:9], list(b_model2_GAC$`board.size`), mean)
# model 3
basic_model3 = read.csv('../results/basic_test_model3.csv')
b_model3_BT = subset(basic_model3, `propagation.type` == 'BT')
b_model3_FC = subset(basic_model3, `propagation.type` == 'FC')
b_model3_GAC = subset(basic_model3, `propagation.type` == 'GAC')
b_model3_BT_aggr = aggregate(b_model3_BT[, 7:9], list(b_model3_BT$`board.size`), mean)
b_model3_FC_aggr = aggregate(b_model3_FC[, 7:9], list(b_model3_FC$`board.size`), mean)
b_model3_GAC_aggr = aggregate(b_model3_GAC[, 7:9], list(b_model3_GAC$`board.size`), mean)
# data - board size x runtime, for 3 models, for 3 propagation types
data = cbind(b_model1_BT_aggr[1:2],
b_model2_BT_aggr[2],
b_model3_BT_aggr[2],
b_model1_FC_aggr[2],
b_model2_FC_aggr[2],
b_model3_FC_aggr[2],
b_model1_GAC_aggr[2],
b_model2_GAC_aggr[2],
b_model3_GAC_aggr[2])
colnames(data) = c('board.size',
'bt.runtime1',
'bt.runtime2',
'bt.runtime3',
'fc.runtime1',
'fc.runtime2',
'fc.runtime3',
'gac.runtime1',
'gac.runtime2',
'gac.runtime3')
write.csv(data, file='../results/small_propagator_model.csv')
# data - board size x runtime/assignment/pruning, for 3 orderings, for 3 propagation types
colnames(b_model1_GAC_val_dec_aggr) = c('board.size',
'runtime_dec',
'assignment_dec',
'pruning_dec')
colnames(b_model1_GAC_val_inc_aggr) = c('board.size',
'runtime_inc',
'assignment_inc',
'pruning_inc')
colnames(b_model1_GAC_val_dec_lcv_aggr) = c('board.size',
'runtime_dec_lcv',
'assignment_dec_lcv',
'pruning_dec_lcv')
data = merge(b_model1_GAC_val_dec_aggr, b_model1_GAC_val_inc_aggr, by='board.size')
data = merge(data, b_model1_GAC_val_dec_lcv_aggr, by='board.size')
write.csv(data, file='../results/small_val_ord.csv')
# board size x runtime, for GAC, for 3 value orderings
plot = read.csv('../results/basic_board_runtime_val_ord.csv')
p = plot_ly(plot, x = ~board.size, y = ~runtime_dec, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~runtime_inc, name = 'GAC val_increasing', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~runtime_dec_lcv, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
adv_dec_model1 = read.csv('../results/advanced_test_model1_decreasing.csv')
a_model1_dec = subset(adv_dec_model1, `value.ordering.type` == 'val_decreasing_order')
a_model1_dec_aggr = aggregate(a_model1_dec[, 7], list(a_model1_GAC$`board.size`), mean)
colnames(a_model1_dec_aggr) = c('board.size',
'dec.runtime1')
View(a_model1_dec)
View(a_model1_GAC)
adv_dec_model1 = read.csv('../results/advanced_test_model1_decreasing.csv')
a_model1_dec = subset(adv_dec_model1, `value.ordering.type` == 'val_decreasing_order')
a_model1_dec_aggr = aggregate(a_model1_dec[, 7], list(a_model1_dec$`board.size`), mean)
colnames(a_model1_dec_aggr) = c('board.size',
'dec.runtime1')
View(a_model1_dec_aggr)
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_declcv_ = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_declcv_[, 7], list(a_model1_declcv_$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_declcv_ = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_declcv_$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_declcv_ = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_declcv_$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_declcv_ = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_declcv_$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_declcv_$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_declcv_$`board.size`), mean)
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_dec_lcv$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decreasing_lcv_order')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_dec_lcv$`board.size`), mean)
View(a_model1_dec_lcv)
View(adv_dec_lcv_model1)
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decrease_lcv')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_dec_lcv$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
View(a_model1_inc_aggr)
View(a_model1_dec_lcv_aggr)
value_ord = cbind(a_model1_dec_aggr[1:2],
a_model1_dec_lcv_aggr[2],
a_model1_inc_aggr[2])
View(value_ord)
# data - board size x runtime, for model1, for GAC, for 3 value orderings
data = cbind(a_model1_dec_aggr[1:2],
a_model1_dec_lcv_aggr[2],
a_model1_inc_aggr[2])
write.csv(data, file='../results/large_value_ordering.csv')
# board size x runtime, for model 1, for GAC, for 3 value orderings
plot = read.csv('../results/large_value_ordering.csv')
p = plot_ly(plot, x = ~board.size, y = ~dec.runtime, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~dec_lcv.runtime, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~inc.runtime, name = 'GAC val_increasing', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
library(plotly)
# board size x runtime, for model 1, for GAC, for 3 value orderings
plot = read.csv('../results/large_value_ordering.csv')
p = plot_ly(plot, x = ~board.size, y = ~dec.runtime, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~dec_lcv.runtime, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~inc.runtime, name = 'GAC val_increasing', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
p
# board size x runtime, for model 1, for GAC, for 3 value orderings
plot = read.csv('../results/large_value_ordering.csv')
p = plot_ly(plot, x = ~board.size, y = ~dec.runtime1, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~dec_lcv.runtime1, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~inc.runtime1, name = 'GAC val_increasing', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
p
View(a_model1_dec_aggr)
setwd('~/Downloads/battleship/data_visualization')
# basic
basic_model1 = read.csv('../results/basic_test_model1.csv')
b_model1_BT = subset(basic_model1, `propagation.type` == 'BT')
b_model1_FC = subset(basic_model1, `propagation.type` == 'FC')
b_model1_GAC = subset(basic_model1, `propagation.type` == 'GAC')
b_model1_BT_aggr = aggregate(b_model1_BT[, 7:9], list(b_model1_BT$`board.size`), mean)
b_model1_FC_aggr = aggregate(b_model1_FC[, 7:9], list(b_model1_FC$`board.size`), mean)
b_model1_GAC_aggr = aggregate(b_model1_GAC[, 7:9], list(b_model1_GAC$`board.size`), mean)
# advanced 5x5 10x10
adv_model1 = read.csv('../results/advanced_test_model1_BT_FT_GAC.csv')
a_model1_BT = subset(adv_model1, `propagation.type` == 'BT')
a_model1_FC = subset(adv_model1, `propagation.type` == 'FC')
a_model1_BT_aggr = aggregate(a_model1_BT[, 7:9], list(a_model1_BT$`board.size`), mean)
a_model1_FC_aggr = aggregate(a_model1_FC[, 7:9], list(a_model1_FC$`board.size`), mean)
# advanced 5x5 ~ 10x10
adv_gac_model1 = read.csv('../results/advanced_test_model1_GAC_only.csv')
a_model1_GAC = subset(adv_gac_model1, `propagation.type` == 'GAC')
a_model1_GAC_aggr = aggregate(a_model1_GAC[, 7:9], list(a_model1_GAC$`board.size`), mean)
colnames(a_model1_GAC_aggr) = c('board.size',
'gac.runtime1',
'gac.assignment1',
'gac.pruning1')
# advanced 1x1 ~ 10x10
adv_dec_model1 = read.csv('../results/advanced_test_model1_decreasing.csv')
a_model1_dec = subset(adv_dec_model1, `value.ordering.type` == 'val_decreasing_order')
a_model1_dec_aggr = aggregate(a_model1_dec[, 7], list(a_model1_dec$`board.size`), mean)
colnames(a_model1_dec_aggr) = c('board.size',
'dec.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decrease_lcv')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_dec_lcv$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
# data - board size x runtime, for model 1, for 3 propagation types
basic = cbind(b_model1_BT_aggr,
b_model1_FC_aggr[2:4])
colnames(basic) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
advanced = cbind(a_model1_BT_aggr,
a_model1_FC_aggr[2:4])
colnames(advanced) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr, by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime_assignment_pruning.csv')
# data - board size x runtime/assignment/pruning, for 3 models, for 3 propagation types
basic = cbind(b_model1_BT_aggr[1:2],
b_model1_FC_aggr[2])
colnames(basic) = c('board.size',
'bt.runtime1',
'fc.runtime1')
advanced = cbind(a_model1_BT_aggr[1:2],
a_model1_FC_aggr[2])
colnames(advanced) = c('board.size',
'bt.runtime1',
'fc.runtime1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr[1:2], by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime.csv')
# data - board size x runtime, for model1, for GAC, for 3 value orderings
data = cbind(a_model1_dec_aggr[1:2],
a_model1_dec_lcv_aggr[2],
a_model1_inc_aggr[2])
write.csv(data, file='../results/large_value_ordering.csv')
# board size x runtime, for model 1, for GAC, for 3 value orderings
plot = read.csv('../results/large_value_ordering.csv')
p = plot_ly(plot, x = ~board.size, y = ~dec.runtime1, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~dec_lcv.runtime1, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~inc.runtime1, name = 'GAC val_increasing', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
p
View(a_model1_dec_aggr)
setwd('~/Downloads/battleship/data_visualization')
# basic
basic_model1 = read.csv('../results/basic_test_model1.csv')
b_model1_BT = subset(basic_model1, `propagation.type` == 'BT')
b_model1_FC = subset(basic_model1, `propagation.type` == 'FC')
b_model1_GAC = subset(basic_model1, `propagation.type` == 'GAC')
b_model1_BT_aggr = aggregate(b_model1_BT[, 7:9], list(b_model1_BT$`board.size`), mean)
b_model1_FC_aggr = aggregate(b_model1_FC[, 7:9], list(b_model1_FC$`board.size`), mean)
b_model1_GAC_aggr = aggregate(b_model1_GAC[, 7:9], list(b_model1_GAC$`board.size`), mean)
# advanced 5x5 10x10
adv_model1 = read.csv('../results/advanced_test_model1_BT_FT_GAC.csv')
a_model1_BT = subset(adv_model1, `propagation.type` == 'BT')
a_model1_FC = subset(adv_model1, `propagation.type` == 'FC')
a_model1_BT_aggr = aggregate(a_model1_BT[, 7:9], list(a_model1_BT$`board.size`), mean)
a_model1_FC_aggr = aggregate(a_model1_FC[, 7:9], list(a_model1_FC$`board.size`), mean)
# advanced 5x5 ~ 10x10
adv_gac_model1 = read.csv('../results/advanced_test_model1_GAC_only.csv')
a_model1_GAC = subset(adv_gac_model1, `propagation.type` == 'GAC')
a_model1_GAC_aggr = aggregate(a_model1_GAC[, 7:9], list(a_model1_GAC$`board.size`), mean)
colnames(a_model1_GAC_aggr) = c('board.size',
'gac.runtime1',
'gac.assignment1',
'gac.pruning1')
# advanced 1x1 ~ 10x10
adv_dec_model1 = read.csv('../results/advanced_test_model1_decreasing.csv')
a_model1_dec = subset(adv_dec_model1, `value.ordering.type` == 'val_decreasing_order')
a_model1_dec_aggr = aggregate(a_model1_dec[, 7], list(a_model1_dec$`board.size`), mean)
colnames(a_model1_dec_aggr) = c('board.size',
'dec.runtime1')
adv_dec_lcv_model1 = read.csv('../results/advanced_test_model1_decreasing_lcv.csv')
a_model1_dec_lcv = subset(adv_dec_lcv_model1, `value.ordering.type` == 'val_decrease_lcv')
a_model1_dec_lcv_aggr = aggregate(a_model1_dec_lcv[, 7], list(a_model1_dec_lcv$`board.size`), mean)
colnames(a_model1_dec_lcv_aggr) = c('board.size',
'dec_lcv.runtime1')
adv_inc_model1 = read.csv('../results/advanced_test_model1_increasing.csv')
a_model1_inc = subset(adv_inc_model1, `value.ordering.type` == 'val_increasing_order')
a_model1_inc_aggr = aggregate(a_model1_inc[, 7], list(a_model1_inc$`board.size`), mean)
colnames(a_model1_inc_aggr) = c('board.size',
'inc.runtime1')
# data - board size x runtime, for model 1, for 3 propagation types
basic = cbind(b_model1_BT_aggr,
b_model1_FC_aggr[2:4])
colnames(basic) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
advanced = cbind(a_model1_BT_aggr,
a_model1_FC_aggr[2:4])
colnames(advanced) = c('board.size',
'bt.runtime1',
'bt.assignment1',
'bt.pruning1',
'fc.runtime1',
'fc.assignment1',
'fc.pruning1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr, by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime_assignment_pruning.csv')
# data - board size x runtime/assignment/pruning, for 3 models, for 3 propagation types
basic = cbind(b_model1_BT_aggr[1:2],
b_model1_FC_aggr[2])
colnames(basic) = c('board.size',
'bt.runtime1',
'fc.runtime1')
advanced = cbind(a_model1_BT_aggr[1:2],
a_model1_FC_aggr[2])
colnames(advanced) = c('board.size',
'bt.runtime1',
'fc.runtime1')
bt_fc = rbind(basic, advanced)
data = merge(bt_fc, a_model1_GAC_aggr[1:2], by='board.size', all.y=TRUE)
write.csv(data, file='../results/large_propagator_runtime.csv')
# data - board size x runtime, for model1, for GAC, for 3 value orderings
data = cbind(a_model1_dec_aggr[1:2],
a_model1_dec_lcv_aggr[2],
a_model1_inc_aggr[2])
write.csv(data, file='../results/large_value_ordering.csv')
library(plotly)
setwd('~/Downloads/battleship/data_visualization')
# board size x runtime, for model 1, for 3 propagators (propagators scaling with board size)
plot = read.csv('../results/large_board_runtime_model.csv')
plot = na.omit(plot)
p = plot_ly(plot, x = ~board.size, y = ~bt.runtime1, name = 'model1 BT', type = 'scatter', mode = 'lines', line = list(color = '#3F51B5', width = 2))%>%
add_trace(y = ~fc.runtime1, name = 'model1 FC', line = list(color = '#2196F3', width = 2)) %>%
add_trace(y = ~gac.runtime1, name = 'model1 GAC', line = list(color = '#B3E5FC', width = 2)) %>%
layout(title = "Propagators Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)", type = "log"))
# board size x runtime, for model 1, for decreasing order, for 3 propagators (assignments/prunings with board size)
p = plot_ly(plot, x = ~board.size, y = ~bt.assignment1, name = 'model1 BT assignments', type = 'scatter', mode = 'lines', line = list(color = '#B71C1C', width = 2))%>%
add_trace(y = ~fc.assignment1, name = 'model1 FC assignments', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~fc.pruning1, name = 'model1 FC prunings', line = list(color = '#1B5E20', width = 2)) %>%
add_trace(y = ~gac.assignment1, name = 'model1 GAC assignments', line = list(color = '#2196F3', width = 2)) %>%
add_trace(y = ~gac.pruning1, name = 'model1 GAC prunings', line = list(color = '#1A237E', width = 2)) %>%
layout(title = "Assignments/Prunings Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Assignments/Prunings", type = "log"))
# board size x runtime, for model 1, for GAC, for 3 value orderings
plot = read.csv('../results/large_value_ordering.csv')
p = plot_ly(plot, x = ~board.size, y = ~dec.runtime1, name = 'GAC val_decreasing', type = 'scatter', mode = 'lines', line = list(color = 'rgb(255,0,0)', width = 2))%>%
add_trace(y = ~dec_lcv.runtime1, name = 'GAC val_decreasing_lcv', line = list(color = 'rgb(0,255,0)', width = 2)) %>%
add_trace(y = ~inc.runtime1, name = 'GAC val_increasing', line = list(color = 'rgb(0,0,255)', width = 2)) %>%
layout(title = "Models Scaling with Board Size",
xaxis = list(title = "Board Size"),
yaxis = list (title = "Runtime (sec)"))
p
